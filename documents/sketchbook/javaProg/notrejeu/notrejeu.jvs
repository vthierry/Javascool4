// Les fonctions Java pour faire le jeu
import javax.swing.JLabel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

void afficher_logo() {
  // Tire au hasard un des cinq logos
  int n = random(0, 5);
  String logo = "logo-original.jpg";
  if (n < 1)
    logo = "logo-blanc-violet.jpg";
  else if (n < 2) 
    logo = "logo-bleu-turquoise.jpg";
  else if (n < 3) 
    logo = "logo-bleu.jpg";
  else if (n < 4) 
    logo = "logo-jaune.jpg";
  // Affiche le logo en haut à gauche et à droite
  showIcon(logo, 0, 0, 150, 150, 1);
  showIcon(logo, getPane().getWidth() - 150, 0, 150, 150, 1);
}

void explosion() {
}

// L'objet mobile du jeu
JLabel mobile;
int mobile_position_horizontale = 0, mobile_vitesse_horizontale = 0, mobile_position_verticale = 0, mobile_vitesse_verticale = 0;

void click(int x, int y) {
  System.out.println("("+x+" - "+y+")");
}

// Voilà la mécanique mise en place par Philippe et cie pour que ça marche . . 
void main() {   
  // Mise en place de l'écran
  getPane().removeAll();
  getPane().setOpaque(true);
  getPane().setBackground(java.awt.Color.WHITE);
  // Affichage des obstacles 
  {
    int largeur = getPane().getWidth(), hauteur = getPane().getHeight();
    System.err.println("("+largeur+", "+hauteur+")");
    showIcon("Nenuphar200x200.png", largeur / 4 - 100, (3 * hauteur) / 4 - 100, 200, 200, 4);
    showIcon("Nenuphar200x200.png", (3 * largeur) / 4 - 100, (3 * hauteur) / 4 - 100, 200, 200, 4);
  }
  // Création du mobile
  {
    mobile = showIcon("Abeille-100x100.png", 
		      mobile_position_horizontale, mobile_position_verticale, 100, 100, 3);
  }
  // Mise en place d'un détecteur de clic de souris
  {
    getPane().addMouseListener(new MouseAdapter() {
	public void mouseClicked(MouseEvent e) {
	  click(e.getX(), e.getY());
	}});
  }
  // Gestion de la dynamique du jeu
  {
    // Changement de la vitesse avec les touches du clavier
    setKeyListener(new Runnable() { public void run() {
      int mobile_acceleration = 10;
      if ("Left".equals(getLastKey()))
	mobile_vitesse_horizontale -= mobile_acceleration;
      if ("Right".equals(getLastKey()))
	mobile_vitesse_horizontale += mobile_acceleration;
      if ("Up".equals(getLastKey()))
	mobile_vitesse_verticale -= mobile_acceleration;
      if ("Down".equals(getLastKey()))
	mobile_vitesse_verticale += mobile_acceleration;
    }});
    // Dynamique du mobile
    sample(200, new Runnable() { public void run() {
      // Ici on affiche le logo
      afficher_logo();
      // Ici on fait tomber le mobile vers le bas en le freinant horizontalement
       int mobile_deceleration = 2;
      if (abs(mobile_vitesse_horizontale) > 0)
	mobile_vitesse_horizontale -= mobile_deceleration;
      if (mobile_vitesse_verticale < 10)
	mobile_vitesse_verticale += mobile_deceleration;
      mobile_position_horizontale += mobile_vitesse_horizontale;
      mobile_position_verticale += mobile_vitesse_verticale;
      // Ici on fait attention que le mobile ne dépasse pas les limites
      if (mobile.getX() > getPane().getWidth() - mobile.getWidth()) {
	mobile_position_horizontale = getPane().getWidth() - mobile.getWidth();
	mobile_vitesse_horizontale = 0;
      }
      if (mobile.getY() > getPane().getHeight() - mobile.getHeight()) {
	mobile_position_verticale = getPane().getHeight() - mobile.getHeight();
	mobile_vitesse_verticale = 0;
      }
      if (mobile.getX() < 1) {
	mobile_position_horizontale = 1;
	mobile_vitesse_horizontale = 0;
      }
      if (mobile.getY() < mobile.getHeight()) {
	mobile_position_verticale = mobile.getHeight();
	mobile_vitesse_verticale = 0;
      }
      mobile.setLocation(mobile_position_horizontale, mobile_position_verticale);
    }});
  }
}
