<!-- Construction des éléments de javascool (core), javascoolbuilder, et des proglets -->
<project name="Java's Cool v4" default="usage">

  <target name="usage"><echo level="info">
    ant javacool.jar		construit dans ./dist la jarre Javas'Cool Core "apprenant" sans proglet
    ant javacool-builder.jar	construit dans ./dist la jarre Javas'Cool Builder "formateur" pour genérer les progetss
    ant javascool-proglets.jar	construit dans ./dist la jarre Javas'Cool Core "apprenant" avec toutes les proglets disponibles
    ant javadoc			construit dans ./dist/javadoc la javadoc des classes (avec java2html)
    ant webproglets             construit dans ./dist/proglets les éléments pour la mise en ligne web des proglets
    ant classes                 teste la compilation des classes
    ant beautify                reformate tous les sources avec la commande uncrustify
    ant processing              lance (si l'installation est ok) la plateforme processing
    ant clean                   nettoie les cibles non retenues dans le svn
    ant prun			lance Javas'Cool Core "apprenant" avec les proglets
    ant jrun			lance Javas'Cool Core "apprenant" sans les proglets
    ant drun			lance l'affichage de la javadoc
  </echo></target>

  <target name="javascool.jar" depends="classes" >
    <delete file="./dist/javascool.jar"/>
    <unzip dest="./build/classes" src="./lib/RSyntaxTextArea.jar"/>
    <unzip dest="./build/classes" src="./lib/javac.jar"/>
    <jar destfile="./dist/javascool.jar">
      <manifest>
        <attribute name="Main-Class" value="org.javascool.Core"/>
      </manifest>
      <fileset dir="./build/classes"/>
      <fileset dir="./src" includes="org/javascool/widgets/icons/*"/>
    </jar>
  </target>

  <target name="javascool-builder.jar" depends="classes,svn.revision">
    <delete file="./dist/javascool-builder.jar"/>
    <unzip dest="./build/classes" src="./lib/RSyntaxTextArea.jar"/>
    <unzip dest="./build/classes" src="./lib/javadoc.jar"/>
    <unzip dest="./build/classes" src="./lib/javac.jar"/>
    <unzip dest="./build/classes" src="./lib/jvs2html.jar"/>
    <unzip dest="./build/classes" src="./lib/saxon.jar"/>
    <jar destfile="./dist/javascool-builder.jar">
      <manifest>
        <attribute name="Main-Class" value="org.javascool.Build"/>
        <attribute name="Created-By" value="inria.fr (javascool.gforge.inria.fr) ©INRIA: CeCILL V2 + CreativeCommons BY-NC-ND V2"/>
        <attribute name="Implementation-URL" value="http://javascool.gforge.inria.fr"/>
        <attribute name="Implementation-Vendor" value="fuscia-accueil@inria.fr, ou=javascool.gforge.inria.fr, o=inria.fr, c=fr"/>
        <attribute name="Implementation-Version" value="${svn.revision}"/>
      </manifest>
      <fileset dir="./build/classes"/>
      <fileset dir="./src" includes="org/javascool/widgets/icons/*"/>
      <fileset dir="./src" includes="org/javascool/builder/*.xslt"/>
    </jar>
  </target>

  <target name="javascool-proglets.jar" depends="javascool-builder.jar">
    <java jar="./dist/javascool-builder.jar" dir="../sketchbook" fork="true">
      <arg value="-q"/>
    </java>
    <move file="../sketchbook/javascool-proglets.jar" todir="./dist"/>
  </target>
  
  <target name="webproglets" depends="javascool-builder.jar">
    <java jar="./dist/javascool-builder.jar" dir="../sketchbook" fork="true">
      <arg value="-w"/>
      <arg value="../work/dist/proglets"/>
    </java>
    <move file="../sketchbook/javascool-proglets.jar" todir="./dist"/>
  </target>
  
  <property name="classpath" value="./lib/RSyntaxTextArea.jar:lib/jvs2html.jar:lib/javadoc.jar"/>

  <target name="classes" depends="svn.revision">
    <mkdir dir="./build/classes"/>
    <replaceregexp file="src/org/javascool/Core.java" match="[0-9]*(.; *// *@revision)" replace="${svn.revision}\1"/>
    <javac debug="true" debuglevel="lines,vars,source" includeantruntime="false" deprecation="on" encoding="UTF-8" classpath="${classpath}" srcdir="./src" destdir="./build/classes"/>   
    <replaceregexp file="src/org/javascool/Core.java" match="[0-9]*(.; *// *@revision)" replace="0\1"/>
  </target>

  <target name="javadoc">
    <mkdir dir="./dist/javadoc"/>
    <javadoc
      verbose="false"
      classpath="${classpath}"
      access="public" 
      destdir="./dist/javadoc"
      windowtitle="Java's Cool v4"
      doctitle="Java's Cool v4"
      author="true"
      version="true"
      nodeprecated="true"
      nohelp="true"
      nonavbar="true"
      notree="true"
      charset="UTF-8"
      docencoding="UTF-8"
       >
      <link href="http://download.oracle.com/javase/6/docs/api"/>
      <link href="http://javadoc.fifesoft.com/rsyntaxtextarea"/>
      <fileset dir="./src">
        <include name="**/*.java"/>
      </fileset>
    </javadoc>
    <copy todir="./dist/javadoc">        
      <fileset dir="./src">
        <include name="**/*.java"/>
      </fileset>
      <mapper type="glob" from="*" to="*.java"/>
    </copy>
    <java jar="./lib/java2html.jar" fork="true">
      <arg value="-srcdir"/>
      <arg value="./dist/javadoc"/>
    </java>
  </target>

  <taskdef resource="net/sf/antcontrib/antlib.xml"/>

  <target name="svn.revision">
    <exec executable="svn" outputproperty="svn.info.stdout">
      <arg value="info"/>
    </exec>
    <propertyregex property="svn.revision" input="${svn.info.stdout}" select="\1">
      <regexp pattern=".*R.vision[^:]*: *([0-9]*).*"/>
    </propertyregex>
    <property name="svn.revision" value="0"/>
  </target>

  <target name="beautify">
    <for param="file">
      <path>
        <fileset dir="../sketchbook">
          <include name="**/*.java"/>
          <include name="**/*.jvs"/>
          <include name="**/*.pde"/>
        </fileset>
        <fileset dir="./src">
          <include name="**/*.java"/>
        </fileset>
      </path>
      <sequential>
        <exec os="Linux" executable="uncrustify">
          <arg line="-q -c lib/uncrustify.cfg --replace"/>
          <arg value="@{file}"/>
        </exec>
      </sequential>
    </for>
  </target>
  
  <target name="processing">
    <property name="pHome" value="/usr/java/processing-1.2.1"/>
    <java dir="${pHome}" jvm="${pHome}/java/bin/java" classname="processing.app.Base" fork="true">
      <classpath>
        <pathelement location="${pHome}/java/lib/tools.jar"/>
        <pathelement location="${pHome}/jre/lib/rt.jar"/>
        <fileset dir="${pHome}/lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </java>
  </target>

  <target name="clean">
    <delete dir="./build/classes"/> 
    <delete dir="./dist/proglets"/> 
    <delete dir="./dist/javadoc"/> 
    <delete dir="./nbproject/private"/> 
    <ant dir="../web" target="clean"/>
  </target>

  <target name="svn" depends="clean"> 
    <exec executable="svn">
      <arg value="cleanup"/>
      <arg value=".."/>
    </exec>
    <exec executable="svn">
      <arg value="up"/>
      <arg value=".."/>
    </exec>
    <input message="Quelle est la raison de ce commit ?" addproperty="svn.commit.message" defaultvalue="une raison inconnue"/> 
    <exec executable="svn">
      <arg value="ci"/>
      <arg value="-m"/>
      <arg value="${svn.commit.message}"/>
      <arg value=".."/>
    </exec>
    <exec executable="svn">
      <arg value="status"/>
      <arg value=".."/>
    </exec>
  </target>

  <target name="jrun" depends="javascool.jar">
    <java jar="./dist/javascool.jar" dir="../sketchbook" fork="true"/>
  </target>
  
  <target name="prun" depends="javascool-proglets.jar">
    <java jar="./dist/javascool-proglets.jar" fork="true"/>
  </target>
    
  <target name="drun" depends="javadoc">
    <exec os="Linux" executable="firefox">
      <arg value="./dist/javadoc/index.html"/>
    </exec>
  </target>
    
</project>
